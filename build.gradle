import com.github.jk1.license.filter.LicenseBundleNormalizer
import com.github.jk1.license.render.JsonReportRenderer
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'com.palantir.docker' version '0.25.0' apply false
    id 'org.jetbrains.kotlin.jvm' version "${kotlin_version}"
    id "org.owasp.dependencycheck" version "8.3.1"
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
    id 'com.github.jk1.dependency-license-report' version '2.5'
    id "de.undercouch.download" version "5.4.0"
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.palantir.docker'

group = 'com.exactpro.th2'
version = release_version

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()

    maven {
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
    }

    maven {
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }

    mavenLocal()

    configurations.configureEach {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

jar {
    manifest {
        attributes(
                'Created-By': "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title': '',
                'Specification-Vendor': 'Exactpro Systems LLC',
                'Implementation-Title': project.archivesBaseName,
                'Implementation-Vendor': 'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version': project.version
        )
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    api platform('com.exactpro.th2:bom:4.5.0')

    implementation 'com.exactpro.th2:common:5.4.1-dev'
    implementation 'com.exactpro.th2:common-utils:2.2.0-dev'
    implementation 'com.exactpro.th2:grpc-conn:0.1.0-TS-1663-+'
    implementation 'com.exactpro.th2:conn-ws-client:0.4.0-TS-1633-+'
    implementation 'com.exactpro.th2:conn-http-client:2.1.0-dev'

    implementation 'org.slf4j:slf4j-api'

    implementation 'io.github.microutils:kotlin-logging:3.0.5'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'com.athaydes.rawhttp:rawhttp-core:2.6.0'

    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
}

application {
    mainClassName 'com.exactpro.th2.ws.client.Main'
}

applicationName = 'service'

distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions.jvmTarget = "11"
}

dependencyCheck {
    formats = ['SARIF', 'JSON', 'HTML']
    failBuildOnCVSS = 5
    analyzers {
        assemblyEnabled = false
        nugetconfEnabled = false
        nodeEnabled = false
    }
}

licenseReport {
    def licenseNormalizerBundlePath = "$buildDir/license-normalizer-bundle.json"

    if (!file(licenseNormalizerBundlePath).exists()) {
        download.run {
            src 'https://raw.githubusercontent.com/th2-net/.github/main/license-compliance/gradle-license-report/license-normalizer-bundle.json'
            dest "$buildDir/license-normalizer-bundle.json"
            overwrite false
        }
    }

    filters = [
            new LicenseBundleNormalizer(licenseNormalizerBundlePath, false)
    ]
    renderers = [
            new JsonReportRenderer('licenses.json', false),
    ]
    excludeOwnGroup = false
    allowedLicensesFile = new URL("https://raw.githubusercontent.com/th2-net/.github/main/license-compliance/gradle-license-report/allowed-licenses.json")
}
